{
  "api/Markdown.ColorCode.html": {
    "href": "api/Markdown.ColorCode.html",
    "title": "Namespace Markdown.ColorCode | Markdown.ColorCode",
    "keywords": "Namespace Markdown.ColorCode Classes MarkdownPipelineBuilderExtensions Extensions for adding ColorCode code colorization to the Markdig . Enums HtmlFormatterType The type of HTML formatter to use when converting markdown code blocks to HTML."
  },
  "api/Markdown.ColorCode.HtmlFormatterType.html": {
    "href": "api/Markdown.ColorCode.HtmlFormatterType.html",
    "title": "Enum HtmlFormatterType | Markdown.ColorCode",
    "keywords": "Enum HtmlFormatterType The type of HTML formatter to use when converting markdown code blocks to HTML. Namespace : Markdown.ColorCode Assembly : Markdown.ColorCode.dll Syntax public enum HtmlFormatterType : int Fields Name Description Css Use the ColorCode to format the code using CSS classes. Style Use the ColorCode to format the code using inline style attributes."
  },
  "api/Markdown.ColorCode.MarkdownPipelineBuilderExtensions.html": {
    "href": "api/Markdown.ColorCode.MarkdownPipelineBuilderExtensions.html",
    "title": "Class MarkdownPipelineBuilderExtensions | Markdown.ColorCode",
    "keywords": "Class MarkdownPipelineBuilderExtensions Extensions for adding ColorCode code colorization to the Markdig . Inheritance Object MarkdownPipelineBuilderExtensions Namespace : Markdown.ColorCode Assembly : Markdown.ColorCode.dll Syntax public static class MarkdownPipelineBuilderExtensions : object Methods | Improve this Doc View Source UseColorCode(MarkdownPipelineBuilder, HtmlFormatterType, Nullable<StyleDictionary>, Nullable<IEnumerable<ILanguage>>, Nullable<String>) Use ColorCode to colorize HTML generated from Markdown. Declaration public static MarkdownPipelineBuilder UseColorCode(this MarkdownPipelineBuilder markdownPipelineBuilder, HtmlFormatterType htmlFormatterType = HtmlFormatterType.Style, StyleDictionary? styleDictionary = null, IEnumerable<ILanguage>? additionalLanguages = null, string? defaultLanguageId = null) Parameters Type Name Description MarkdownPipelineBuilder markdownPipelineBuilder The to configure. HtmlFormatterType htmlFormatterType Optional. The type of HTML formatter to use when generating HTML from Markdown. Nullable < StyleDictionary > styleDictionary Optional. The styles to use when generating HTML from Markdown. Nullable < IEnumerable < ILanguage >> additionalLanguages Optional. Additional languages used to augment the built-in languages provided by ColorCode-Universal. Nullable < String > defaultLanguageId Optional. The default language to use if a given language can't be found. Returns Type Description MarkdownPipelineBuilder The configured with ColorCode."
  },
  "index.html": {
    "href": "index.html",
    "title": "Markdown.ColorCode | Markdown.ColorCode",
    "keywords": "Markdown.ColorCode About The Project An extension for Markdig that adds syntax highlighting to code through the power of ColorCode . Demonstration Before using Foo.Bar.Baz; namespace Foo.Api; public interface FooService { /// <summary> /// Gets a new Foo! /// </summary> /// <returns>A new Foo</returns> public void GetFoo() { return new Foo(); } } After using Foo.Bar.Baz; namespace Foo.Api; public interface FooService { /// <summary> /// Gets a new Foo! /// </summary> /// <returns>A new Foo</returns> public void GetFoo() { return new Foo(); } } Installation Package Manager Install-Package Markdown.ColorCode -Version 2.1.0 .NET CLI dotnet add package Markdown.ColorCode --version 2.1.0 Usage To use this extension with Markdig , simply install the Markdown.ColorCode package use the ColorCode extension: var pipeline = new MarkdownPipelineBuilder() .UseAdvancedExtensions() .UseColorCode() .Build(); var colorizedHtml = Markdig.Markdown.ToHtml(someMarkdown, pipeline); Several optional configuration options are also at your disposal: var pipeline = new MarkdownPipelineBuilder() .UseAdvancedExtensions() .UseColorCode( HtmlFormatterType.Style, // use style-based colorization (default) myCustomStyleDictionary, // use a custom colorization style dictionary myAdditionalLanguages, // augment the built-in language support myCustomLanguageId // set a default language ID to fall back to ) .Build(); var colorizedHtml = Markdig.Markdown.ToHtml(someMarkdown, pipeline); Roadmap See the open issues for a list of proposed features (and known issues). Contributing Contributions are what make the open source community such an amazing place to learn, inspire, and create. Any contributions you make are greatly appreciated . For detailed contributing guidelines, please see CONTRIBUTING.md . License Distributed under the MIT License License. See LICENSE for more information. Contact @wbaldoumas Project Link: https://github.com/wbaldoumas/markdown-colorcode Acknowledgements This README was adapted from https://github.com/othneildrew/Best-README-Template . <!-- MARKDOWN LINKS & IMAGES --> <!-- https://www.markdownguide.org/basic-syntax/#reference-style-links -->"
  }
}